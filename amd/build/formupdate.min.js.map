{"version":3,"file":"formupdate.min.js","sources":["../src/formupdate.js"],"sourcesContent":["import Fragment from 'core/fragment';\nimport notification from 'core/notification';\nimport templates from 'core/templates';\n\n/**\n * Initialize listeners\n *\n * @param {int} contextid Context id of content bank\n * @param {string} library Library identifier\n */\nconst init = (contextid, library) => {\n    'use strict';\n\n    document.removeEventListener('change', handleChange.bind(window, contextid, library));\n    document.addEventListener('change', handleChange.bind(window, contextid, library));\n};\n\n/**\n * Update form from change event\n *\n * @param {int} contextid Context id of content bank\n * @param {string} library Library identifier\n * @param {event} e Event\n */\nconst handleChange = (contextid, library, e) => {\n    if (e.target.closest('form #id_category, form #id_recurse, form #id_question, form [data-action=\"update\"]')) {\n        let form = e.target.closest('form');\n        e.stopPropagation();\n        e.preventDefault();\n        updateForm(contextid, library, form);\n    }\n};\n\n/**\n * Update the form\n *\n * @param {int} contextid Context id of content bank\n * @param {string} library Library identifier\n * @param {DOMNode} form Form element to be updated\n */\nconst updateForm = (contextid, library, form) => {\n        let data = {},\n            formdata = new FormData(form),\n            params = {\n                contextid: contextid,\n                library: library,\n                plugin: 'repurpose'\n            };\n\n        window.onbeforeunload = null;\n\n        formdata.forEach((value, key) => {\n            data[key] = value;\n        });\n        params.jsonformdata = JSON.stringify(data);\n\n        Fragment.loadFragment('contenttype_repurpose', 'formupdate', contextid, params).done(function(html, js) {\n            document.removeEventListener('change', updateForm.bind(window, contextid, library));\n            templates.replaceNodeContents(form, html, js);\n            form.parentNode.insertBefore(form.firstChild, form);\n            form.remove();\n        }).fail(notification.exception);\n};\n\nexport default {\n    init: init,\n    updateForm: updateForm\n};\n"],"names":["handleChange","contextid","library","e","target","closest","form","stopPropagation","preventDefault","updateForm","data","formdata","FormData","params","plugin","window","onbeforeunload","forEach","value","key","jsonformdata","JSON","stringify","loadFragment","done","html","js","document","removeEventListener","bind","replaceNodeContents","parentNode","insertBefore","firstChild","remove","fail","notification","exception","init","addEventListener"],"mappings":"wdAwBMA,aAAe,CAACC,UAAWC,QAASC,QAClCA,EAAEC,OAAOC,QAAQ,uFAAwF,KACrGC,KAAOH,EAAEC,OAAOC,QAAQ,QAC5BF,EAAEI,kBACFJ,EAAEK,iBACFC,WAAWR,UAAWC,QAASI,QAWjCG,WAAa,CAACR,UAAWC,QAASI,YAC5BI,KAAO,GACPC,SAAW,IAAIC,SAASN,MACxBO,OAAS,CACLZ,UAAWA,UACXC,QAASA,QACTY,OAAQ,aAGhBC,OAAOC,eAAiB,KAExBL,SAASM,SAAQ,CAACC,MAAOC,OACrBT,KAAKS,KAAOD,SAEhBL,OAAOO,aAAeC,KAAKC,UAAUZ,wBAE5Ba,aAAa,wBAAyB,aAActB,UAAWY,QAAQW,MAAK,SAASC,KAAMC,IAChGC,SAASC,oBAAoB,SAAUnB,WAAWoB,KAAKd,OAAQd,UAAWC,6BAChE4B,oBAAoBxB,KAAMmB,KAAMC,IAC1CpB,KAAKyB,WAAWC,aAAa1B,KAAK2B,WAAY3B,MAC9CA,KAAK4B,YACNC,KAAKC,sBAAaC,yBAGd,CACXC,KAvDS,CAACrC,UAAWC,WAGrByB,SAASC,oBAAoB,SAAU5B,aAAa6B,KAAKd,OAAQd,UAAWC,UAC5EyB,SAASY,iBAAiB,SAAUvC,aAAa6B,KAAKd,OAAQd,UAAWC,WAoDzEO,WAAYA"}