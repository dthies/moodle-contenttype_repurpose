{"version":3,"sources":["../src/formupdate.js"],"names":["init","contextid","library","document","removeEventListener","updateForm","bind","window","addEventListener","e","target","closest","data","form","formdata","FormData","params","jsonformdata","JSON","stringify","plugin","stopPropagation","preventDefault","onbeforeunload","forEach","value","key","Fragment","loadFragment","done","html","js","templates","replaceNodeContents","parentNode","insertBefore","firstChild","remove","fail","notification","exception"],"mappings":"0MAAA,OACA,OACA,O,0DAQoB,QAAPA,CAAAA,IAAO,CAACC,CAAD,CAAYC,CAAZ,CAAwB,CAGxCC,QAAQ,CAACC,mBAAT,CAA6B,QAA7B,CAAuCC,CAAU,CAACC,IAAX,CAAgBC,MAAhB,CAAwBN,CAAxB,CAAmCC,CAAnC,CAAvC,EACAC,QAAQ,CAACK,gBAAT,CAA0B,QAA1B,CAAoCH,CAAU,CAACC,IAAX,CAAgBC,MAAhB,CAAwBN,CAAxB,CAAmCC,CAAnC,CAApC,CACH,C,CASD,GAAMG,CAAAA,CAAU,CAAG,SAASJ,CAAT,CAAoBC,CAApB,CAA6BO,CAA7B,CAAgC,CAC/C,GAAIA,CAAC,CAACC,MAAF,CAASC,OAAT,CAAiB,uFAAjB,CAAJ,CAA6G,CACzG,GAAIC,CAAAA,CAAI,CAAG,EAAX,CACIC,CAAI,CAAGJ,CAAC,CAACC,MAAF,CAASC,OAAT,CAAiB,MAAjB,CADX,CAEIG,CAAQ,CAAG,GAAIC,CAAAA,QAAJ,CAAaF,CAAb,CAFf,CAGIG,CAAM,CAAG,CACLf,SAAS,CAAEA,CADN,CAELgB,YAAY,CAAEC,IAAI,CAACC,SAAL,CAAeP,CAAf,CAFT,CAGLV,OAAO,CAAEA,CAHJ,CAILkB,MAAM,CAAE,WAJH,CAHb,CAUAX,CAAC,CAACY,eAAF,GACAZ,CAAC,CAACa,cAAF,GACAf,MAAM,CAACgB,cAAP,CAAwB,IAAxB,CAEAT,CAAQ,CAACU,OAAT,CAAiB,SAACC,CAAD,CAAQC,CAAR,CAAgB,CAC7Bd,CAAI,CAACc,CAAD,CAAJ,CAAYD,CACf,CAFD,EAGAT,CAAM,CAACC,YAAP,CAAsBC,IAAI,CAACC,SAAL,CAAeP,CAAf,CAAtB,CAEAe,UAASC,YAAT,CAAsB,uBAAtB,CAA+C,YAA/C,CAA6D3B,CAA7D,CAAwEe,CAAxE,EAAgFa,IAAhF,CAAqF,SAASC,CAAT,CAAeC,CAAf,CAAmB,CACpG5B,QAAQ,CAACC,mBAAT,CAA6B,QAA7B,CAAuCC,CAAU,CAACC,IAAX,CAAgBC,MAAhB,CAAwBN,CAAxB,CAAmCC,CAAnC,CAAvC,EACA8B,UAAUC,mBAAV,CAA8BpB,CAA9B,CAAoCiB,CAApC,CAA0CC,CAA1C,EACAlB,CAAI,CAACqB,UAAL,CAAgBC,YAAhB,CAA6BtB,CAAI,CAACuB,UAAlC,CAA8CvB,CAA9C,EACAA,CAAI,CAACwB,MAAL,EACH,CALD,EAKGC,IALH,CAKQC,UAAaC,SALrB,CAMH,CACJ,C","sourcesContent":["import Fragment from 'core/fragment';\nimport notification from 'core/notification';\nimport templates from 'core/templates';\n\n/**\n * Initialize listeners\n *\n * @param {int} contextid Context id of content bank\n * @param {string} library Library identifier\n */\nexport const init = (contextid, library) => {\n    'use strict';\n\n    document.removeEventListener('change', updateForm.bind(window, contextid, library));\n    document.addEventListener('change', updateForm.bind(window, contextid, library));\n};\n\n/**\n * Update the form\n *\n * @param {int} contextid Context id of content bank\n * @param {string} library Library identifier\n * @param {event} e Event\n */\nconst updateForm = function(contextid, library, e) {\n    if (e.target.closest('form #id_category, form #id_recurse, form #id_question, form [data-action=\"update\"]')) {\n        let data = {},\n            form = e.target.closest('form'),\n            formdata = new FormData(form),\n            params = {\n                contextid: contextid,\n                jsonformdata: JSON.stringify(data),\n                library: library,\n                plugin: 'repurpose'\n            };\n\n        e.stopPropagation();\n        e.preventDefault();\n        window.onbeforeunload = null;\n\n        formdata.forEach((value, key) => {\n            data[key] = value;\n        });\n        params.jsonformdata = JSON.stringify(data);\n\n        Fragment.loadFragment('contenttype_repurpose', 'formupdate', contextid, params).done(function(html, js) {\n            document.removeEventListener('change', updateForm.bind(window, contextid, library));\n            templates.replaceNodeContents(form, html, js);\n            form.parentNode.insertBefore(form.firstChild, form);\n            form.remove();\n        }).fail(notification.exception);\n    }\n};\n"],"file":"formupdate.min.js"}